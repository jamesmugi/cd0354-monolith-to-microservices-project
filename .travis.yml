language: node_js
node_js:
 - "16.0.0"
services:
  - docker

# Pre-testing installs
install:
  - echo "--------- Installing dependencies-----------"
  - sudo curl -LO https://nodejs.org/dist/v16.0.0/node-v16.0.0-linux-x64.tar.xz
  - sudo tar -xvf node-v16.0.0-linux-x64.tar.xz
  - sudo cp -r node-v16.0.0-linux-x64/{bin,include,lib,share} /usr/
  - node --version => v16.0.0
  - sudo apt install nodejs
 

# Scripts to be run such as tests
before_script:
  - npm test

script:
  - docker --version # print the version for logging
  - echo "--------- The images is Building ------------"

  - docker build -t udagram-api-feed ./udagram-api-feed
  - docker tag udagram-api-feed jameskaranja/udagram-api-feed:v3

  - docker build -t udagram-api-user ./udagram-api-user
  - docker tag udagram-api-user jameskaranja/udagram-api-user:v3
            
  - docker build -t udagram-frontend ./udagram-frontend
  - docker tag udagram-frontend jameskaranja/udagram-frontend:v3

  - docker build -t udagram-reverseproxy ./udagram-reverseproxy
  - docker tag udagram-reverseproxy jameskaranja/udagram-reverseproxy:v3

  - echo "-------- All images succesfully built----------"

# Tasks to perform after the process is successful. Formatting the Docker username and password as below enables you to programmatically log in without having the password exposed in logs.
after_success:
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - echo " ------- login in to hub--------"

  - echo "-------------- Pushing images to dockerhub-------"

  - docker push jameskaranja/udagram-api-feed:v1
  - docker push jameskaranja/udagram-api-user:v1
  - docker push jameskaranja/udagram-frontend:v1
  - docker push jameskaranja/udagram-reverseproxy:v1